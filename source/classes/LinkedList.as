package classes{	public class LinkedList 	{		private var start:LinkedListNode;		public var length:int;				public function LinkedList() { length = 0; }				public function Add(data:*)		{			if (length == 0) start = new LinkedListNode(data);			else			{				var cur:LinkedListNode = start;				while (cur.next != null) cur = cur.next;				cur.next = new LinkedListNode(data,cur);			}			length++;		}		public function Clear()		{			start = null;			length = 0;		}		public function RemoveAt(index:int)		{			if (index >= length) return;						if (index == 0) 			{				start = start.next;				if (start != null) start.previous = null;			}			else			{				var cur:LinkedListNode = start;				for (var n:int = 1; n < index; n++) cur = cur.next;								cur.next = cur.next.next;				if (cur.next != null) cur.next.previous = cur.previous.next;			}			length--;		}		public function Get(index:int) : *		{			if (index >= length) return null;						var cur:LinkedListNode = start;			for (var n:int = 0; n < index; n++) cur = cur.next;			return cur.data;		}	}	}