/*******************1)	2)	3)	4)	5)OOO	XXX	OOO	XOO	OOXXXX	OOO	OOO	OXO	OXOOOO	OOO	XXX	OOX	XOO6)	7)	8)	9)XOX	OOO	OOO	OXO	OXO	XOX	OXO	XOX	OOO	OXO	XOX	OOO	10)	11)	12)	13)XXO	OOO	OOO	OOX	OOX	XXO	OOX	XXO	OOO	OOX	XXO	OOO	14)	15)	16)	17)OXX	OOO	OOO	XOOXOO	OXX	XOO	OXXOOO	XOO	OXX	OOO*******************/package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import flash.events.MouseEvent;	import flash.filters.GlowFilter;	import flash.geom.Point;		public class Payline extends MovieClip	{		private var radius:Number = 16.0;				private var enabledCircle:MovieClip;		private var disabledCircle:MovieClip;				public var p1:Point;		public var p2:Point;		public var p3:Point;				public var indexes:Array;				public var lineNumber:int;		private var lineText:TextField;		private var lineTextTF:TextFormat;				public var dX:int;		public var dY:int;				public var color:uint;				public var isEnabled:Boolean = false;				public function Payline(line:int) 		{			indexes = new Array();			var points:Array = new Array();			points = [new Point(130,225), new Point(253,225), new Point(380,225),					  new Point(130,355), new Point(253,355), new Point(380,355),					  new Point(130,485), new Point(253,485), new Point(380,485)];						switch (line)			{				case  1: dX =  50; dY = 345; p1 = points[3]; p2 = points[4]; p3 = points[5]; indexes = [0,0,0,1,1,1,0,0,0]; break;				case  2: dX =  50; dY = 215; p1 = points[0]; p2 = points[1]; p3 = points[2]; indexes = [1,1,1,0,0,0,0,0,0]; break;				case  3: dX =  50; dY = 475; p1 = points[6]; p2 = points[7]; p3 = points[8]; indexes = [0,0,0,0,0,0,1,1,1]; break;				case  4: dX =  30; dY = 280; p1 = points[0]; p2 = points[4]; p3 = points[8]; indexes = [1,0,0,0,1,0,0,0,1]; radius *= 5/6; break;				case  5: dX =  30; dY = 410; p1 = points[6]; p2 = points[4]; p3 = points[2]; indexes = [0,0,1,0,1,0,1,0,0]; radius *= 5/6; break;				case  6: dX = 460; dY = 232; p1 = points[0]; p2 = points[4]; p3 = points[2]; indexes = [1,0,1,0,1,0,0,0,0]; radius *= 5/6; break;				case  7: dX = 460; dY = 322; p1 = points[3]; p2 = points[7]; p3 = points[5]; indexes = [0,0,0,1,0,1,0,1,0]; radius *= 5/6; break;				case  8: dX = 460; dY = 412; p1 = points[6]; p2 = points[4]; p3 = points[8]; indexes = [0,0,0,0,1,0,1,0,1]; radius *= 5/6; break;				case  9: dX = 460; dY = 502; p1 = points[3]; p2 = points[1]; p3 = points[5]; indexes = [0,1,0,1,0,1,0,0,0]; radius *= 5/6; break;				case 10: dX = 130; dY = 159; p1 = points[0]; p2 = points[1]; p3 = points[5]; indexes = [1,1,0,0,0,1,0,0,0]; radius *= 5/6; break;				case 11: dX = 211; dY = 159; p1 = points[3]; p2 = points[4]; p3 = points[8]; indexes = [0,0,0,1,1,0,0,0,1]; radius *= 5/6; break;				case 12: dX = 292; dY = 159; p1 = points[6]; p2 = points[7]; p3 = points[5]; indexes = [0,0,0,0,0,1,1,1,0]; radius *= 5/6; break;				case 13: dX = 373; dY = 159; p1 = points[3]; p2 = points[4]; p3 = points[2]; indexes = [0,0,1,1,1,0,0,0,0]; radius *= 5/6; break;				case 14: dX = 130; dY = 568; p1 = points[3]; p2 = points[1]; p3 = points[2]; indexes = [0,1,1,1,0,0,0,0,0]; radius *= 5/6; break;				case 15: dX = 211; dY = 568; p1 = points[6]; p2 = points[4]; p3 = points[5]; indexes = [0,0,0,0,1,1,1,0,0]; radius *= 5/6; break;				case 16: dX = 292; dY = 568; p1 = points[3]; p2 = points[7]; p3 = points[8]; indexes = [0,0,0,1,0,0,0,1,1]; radius *= 5/6; break;				case 17: dX = 373; dY = 568; p1 = points[0]; p2 = points[4]; p3 = points[5]; indexes = [1,0,0,0,1,1,0,0,0]; radius *= 5/6; break;			}						color = Math.random()*0xAAAAAA + 0x555555;						enabledCircle = new MovieClip();			enabledCircle.graphics.lineStyle(2,0x3F310D);			enabledCircle.graphics.beginFill(0x00AA00);			enabledCircle.graphics.drawCircle(radius/2, radius/2, radius);			enabledCircle.graphics.endFill();						disabledCircle = new MovieClip();			disabledCircle.graphics.lineStyle(2,0x3F310D);			disabledCircle.graphics.beginFill(0x1D100D);			disabledCircle.graphics.drawCircle(radius/2, radius/2, radius);			disabledCircle.graphics.endFill();						lineNumber = line;			lineTextTF = new TextFormat("Impact", radius, 0xFFFFFF, null, null, null, null, null, TextFormatAlign.CENTER);			lineText = new TextField();			lineText.selectable = false;			lineText.text = "" + lineNumber;			lineText.setTextFormat(lineTextTF);						addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			addEventListener(MouseEvent.ROLL_OVER, onRollOver);			addEventListener(MouseEvent.ROLL_OUT, onRollOut);			addEventListener(MouseEvent.CLICK, onClick);		}		private function onAddedToStage(e:Event)		{			addChild(disabledCircle);			addChild(enabledCircle);			addChild(lineText);						lineText.x = -radius/4; 			lineText.y = -radius/4; 			lineText.width = radius + radius/2; 			lineText.height = radius + radius/2;						enabledCircle.visible = false;			if (lineNumber == 1)			{				enabledCircle.visible = true;				isEnabled = true;			}		}		private function onRollOver(e:MouseEvent)		{			filters = [new GlowFilter(0xFFFFFF,1.0,10.0,10.0,3)];		}		private function onRollOut(e:MouseEvent)		{			filters = [];		}		private function onClick(e:MouseEvent)		{			if (!enabled) return;						if (lineNumber == 1) return;						if (isEnabled)			{				isEnabled = false;				enabledCircle.visible = false;			}			else			{				isEnabled = true;				enabledCircle.visible = true;			}		}	}	}