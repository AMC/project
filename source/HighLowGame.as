package  {		public class HighLowGame extends Minigame	{		private var currentProfileIndex:int;		private var cards:Array;				private var motion:MotionEngine;				private var callback:Function;				private var isLoadDone:Boolean = false;				private var bg:MovieClip;		private var bid:int;		private var bidText:TextField;		private var bidTextTF:TextFormat;				private var bidMsgText:TextField;		private var bidMsgTextTF:TextFormat;				private var numFlipped:int = 0;		private var first:Card;		private var second:Card;		private var numWon:int = 0;				private var objOver:Card;		public function HighLowGame(bid:int, onCloseCallback:Function) 		{			this.bid = bid;			callback = onCloseCallback;			motion = new MotionEngine();						profileIndexes = new Array();			cards = new Array();						bg = Game.GetMovieClip("MinigameBackground");			bidText = new TextField();			bidTextTF = new TextFormat("Impact", 48, 0xFFFFFF, null, null, null, null, null, TextFormatAlign.CENTER);			bidText.text = bid + "";			bidText.setTextFormat(bidTextTF);						bidMsgText = new TextField();			bidMsgTextTF = new TextFormat("Impact", 32, 0xFFFFFF, null, null, null, null, null, TextFormatAlign.CENTER);			bidMsgText.text = "Current Bid";			bidMsgText.setTextFormat(bidMsgTextTF);						this.addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}		private function onAddedToStage(e:Event)		{			this.removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);						addChild(bg);			addChild(bidText);			addChild(bidMsgText);						bidText.x = 61;		bidText.y = 16;		bidText.width = 280;	bidText.height = 54;			bidMsgText.x = 61;	bidMsgText.y = -20;	bidMsgText.width = 280;	bidMsgText.height = 48;						isLoadDone = false;						currentProfileIndex:int = int(Math.random()*(Game.Profiles.length-1));						Game.Profiles.Get(profileIndexes[currentProfileIndex]).LoadProfile();						var timer:Timer = new Timer(0,0);			timer.addEventListener(TimerEvent.TIMER, onCheckForProfileLoaded);			timer.start();		}		private function onCheckForProfileLoaded(e:Event)		{			var b:Boolean = true;						var profile:ProfileNode = Game.Profiles.Get(profileIndexes[currentProfileIndex]);			if (profile.isLoaded == false) b = false;						if (b)			{				e.target.stop();				e.target.removeEventListener(TimerEvent.TIMER, onCheckForProfilesLoaded);				//e.target = null;								var card:Card = new Card(Game.Profiles.Get(currentProfileIndex));								var s1:Card = new Card();				var s2:Card = new Card();				s1.setAsStopper();				s2.setAsStopper();								cards[14] = s1;								cards = arrayShuffle(cards);								DisplayCards();			}		}	}	}