package  {	import flash.display.Loader;	import flash.events.Event;	import flash.net.URLRequest;	import flash.display.MovieClip;	import flash.system.ApplicationDomain;	import flash.system.LoaderContext;	import flash.events.ProgressEvent;		public class ContentManager {		private var loader:Loader;		private var callback:Function;		private var progressCallback:Function;		public static var TITLE:String = "title/Title.swf";		public static var MATRIX:String = "matrix/Matrix.swf";		public static var POKER:String = "poker/Poker.swf";		public static var SLOTS:String = "slots/Slots.swf";		public function ContentManager() 		{		}		public function getClassDefinition(definition:String) : Class		{			return loader.contentLoaderInfo.applicationDomain.getDefinition(definition) as Class;		}				public function loadExternalSWF(asset:String, callbackFunction:Function, progressCallback:Function=null)		{			callback = callbackFunction;			this.progressCallback = progressCallback;						loader = new Loader();			var ldrContext:LoaderContext = new LoaderContext(false, ApplicationDomain.currentDomain);						var url:URLRequest = new URLRequest(asset);						loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, progressCallback);			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onComplete);			loader.load(url, ldrContext);		}		private function onComplete(e:Event)		{			if (progressCallback != null) loader.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS, progressCallback);			loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, onComplete);			if (callback != null) callback();		}		public function setCallback(f:Function)		{			loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, onComplete);			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, f);		}	}	}